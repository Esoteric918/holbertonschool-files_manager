// To create a user, you must specify an email and a password
// If the email is missing, return an error Missing email with a status code 400
// If the password is missing, return an error Missing password with a status code 400
// If the email already exists in DB, return an error Already exist with a status code 400
// The password must be stored after being hashed in SHA1
// The endpoint is returning the new user with only the email and the id (auto generated by MongoDB) with a status code 201
// The new user must be saved in the collection users:
// email: same as the value received
// password: SHA1 value of the value received

const Mongo = require('../utils/db');
const Redis = require('../utils/redis');
const SHA1 = require('sha1');

class UsersController {
  static async createUser(req, res) {
    const { email, password } = req.body;
    if (!email) {
      return res.status(400).send('Missing email');
    }
    if (!password) {
      return res.status(400).send('Missing password');
    }
    const user = await Mongo.getUser(email);
    if (user) {
      return res.status(400).send('Already exist');
    }
    const hashedPassword = SHA1(password);
    const newUser = await Mongo.createUser(email, hashedPassword);
    return res.status(201).json(newUser, { email, id: newUser._id });
  }

  static async getUser(req, res) {
    const { email } = req.body;
    if (!email) {
      return res.status(400).send('Missing email');
    }
    const user = await Mongo.getUser(email);
    if (!user) {
      return res.status(400).send('User not found');
    }
    return res.status(200).json(user);
  }
}

module.exports = UsersController;
